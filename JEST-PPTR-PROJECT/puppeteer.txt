const puppeteer = require('puppeteer');
async function printPDF() {
  const browser = await puppeteer.launch({ headless: true,args: ['--no-sandbox', '--disable-setuid-sandbox'] });
  
  
  const page = await browser.newPage();  
  await page.goto('C:/Users/502702912/Downloads/5e677d45-6f9d-42d7-a6cf-d04990231ecb/p_DOC2059064.html', {waitUntil: 'networkidle0'});
  await page.addStyleTag({path:'C:/Users/502702912/Downloads/5e677d45-6f9d-42d7-a6cf-d04990231ecb/form.css'});
  
  const buffer = await page.pdf({            
            printBackground: true,
            margin: {
                left: '2px',
                top: '4px',
                right: '2px',
                bottom: '2px'
            },
			
			 PreferCSSPageSize: true 
        })
  await page.addStyleTag({
  content: '@page { size: auto; }',
})	


await page.evaluate(() => new Promise((resolve) => {
  var scrollTop = -1;
  const interval = setInterval(() => {
    window.scrollBy(0, 100);
    if(document.documentElement.scrollTop !== scrollTop) {
      scrollTop = document.documentElement.scrollTop;
      return;
    }
    clearInterval(interval);
    resolve();
  }, 10);
}));
  
  
   await page.emulateMedia('screen');
  
  const pdf = await page.pdf({  path: 'p_DOC2059064_formated_Komal.pdf', landscape: false, printBackground: true, margin: {top: '4px', left: '4px', right: '4px', bottom: '4px'}, PreferCSSPageSize: true ,displayHeaderFooter: true, printBackground: true});
 
  await browser.close();
  return pdf
}printPDF();
